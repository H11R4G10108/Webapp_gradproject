# Generated by Django 5.0.3 on 2025-02-24 15:53

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postid', models.BigAutoField(db_column='postID', primary_key=True, serialize=False)),
                ('p_date', models.DateTimeField()),
                ('groupurl', models.CharField(blank=True, db_column='groupURL', max_length=255, null=True)),
                ('posturl', models.CharField(blank=True, db_column='postURL', max_length=255, null=True, unique=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('react_num', models.IntegerField(blank=True, null=True)),
                ('cmt_num', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('statusid', models.BigAutoField(db_column='statusID', primary_key=True, serialize=False)),
                ('status_desc', models.CharField(blank=True, max_length=20, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userid', models.BigAutoField(db_column='userID', primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('cmtid', models.BigAutoField(db_column='cmtID', primary_key=True, serialize=False)),
                ('c_date', models.DateTimeField()),
                ('content', models.TextField(blank=True, null=True)),
                ('post', models.ForeignKey(help_text='The post of the comment', on_delete=django.db.models.deletion.CASCADE, to='core.post')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('replyid', models.BigAutoField(db_column='replyID', primary_key=True, serialize=False)),
                ('r_date', models.DateTimeField()),
                ('reply', models.TextField(blank=True, null=True)),
                ('postid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.post')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='replyid',
            field=models.ForeignKey(blank=True, db_column='replyID', help_text='Reply for the post', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.reply'),
        ),
        migrations.AddField(
            model_name='post',
            name='statusid',
            field=models.ForeignKey(blank=True, db_column='statusID', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.status'),
        ),
        migrations.CreateModel(
            name='UserBookmarkPost',
            fields=[
                ('markid', models.BigAutoField(db_column='markID', primary_key=True, serialize=False)),
                ('postid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.post')),
                ('userid', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
